type: edu
files:
- name: src/index.html
  visible: true
  text: |-
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Hello, World!</title>
    </head>
    <body>

    </body>
    </html>
  learner_created: false
- name: test/test.js
  visible: false
  text: |
    const puppeteer = require('puppeteer');
    const path = require('path');
    // '..' since we're in the hstest/ subdirectory; learner is supposed to have src/index.html
    const pagePath = 'file://' + path.resolve(__dirname, '../src/index.html');

    const hs = require('hs-test-web');

    const sleep = (ms) => new Promise(res => setTimeout(res, ms));

    async function stageTest() {
        const browser = await puppeteer.launch({
            headless: false,
            defaultViewport: null,
            args:['--start-maximized']
        });

        const page = await browser.newPage();
        await page.goto(pagePath);

        page.on('console', msg => console.log(msg.text()));

        let selector = 'button[class="open-window"]';
        page.evaluate((selector) => document.querySelector(selector).click(), selector);

        await sleep(1000);

        let result = await hs.testPage(page,
            // Test #1 - check if the document has the header
            () => {
                let headers = document.getElementsByTagName('header');

                if (headers === null || headers.length === 0) {
                    return hs.wrong('Cannot find the header in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one header in the document.');
                }

                return hs.correct();
            },

            // Test #2 - check if the document has at least one <nav> element
            () => {
                let nav = document.getElementsByTagName('nav');

                if (nav === null || nav.length === 0) {
                    return hs.wrong('Cannot find the nav element on your web page.');
                }

                return hs.correct();
            },

            // Test #3 - check if the document has the <h1> element
            () => {
                let headings1 = document.getElementsByTagName('h1');

                if (headings1 === null || headings1.length === 0) {
                    return hs.wrong('Cannot find h1 element on your web page.');
                }

                let header = headings1[0]
                let title = header.textContent || header.innerText;

                if (!title || title.length === 0) {
                    return hs.wrong('Cannot find a text within h1 element');
                }

                return hs.correct();
            },

            // Test #4 - check if the document has the <footer> element
            () => {
                let footers = document.getElementsByTagName('footer');

                if (footers === null || footers.length === 0) {
                    return hs.wrong('Cannot find the footer in the document.');
                } else if (footers.length > 1) {
                    return hs.wrong('Found more than one footer in the document.');
                }

                return hs.correct();
            },

            // Test #5 - check if the document has at least three section elements
            () => {
                let sections = document.getElementsByTagName('section');

                if (sections === null || sections.length < 3) {
                    return hs.wrong(`Cannot find tree sections elements. There are only ${sections.length}.`);
                }

                return hs.correct();
            },

            // Test #6 - check the "about me" section
            () => {
                let sections = document.getElementById('about');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "about" id.');
                }

                return hs.correct();
            },

            // Test #7 - check the "portfolio" section
            () => {
                let sections = document.getElementById('portfolio');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "portfolio" id.');
                }

                return hs.correct();
            },

            // Test #8 - check the "contacts" section
            () => {
                let sections = document.getElementById('contacts');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "contacts" id.');
                }

                return hs.correct();
            },

            // Test #9 - check header and footer background colors
            () => {
                function getRealColor(elem) {
                    while (elem) {
                        let color = window.getComputedStyle(elem).backgroundColor;
                        if (color !== "rgba(0, 0, 0, 0)") {
                            let match = color.match(/^rgba?\((\d+), (\d+), (\d+)(, \d+)?\)$/i);
                            return {
                                red: Number(match[1]),
                                green: Number(match[2]),
                                blue: Number(match[3]),
                                hex: Number(match[1]) * 65536 + Number(match[2]) * 256 + Number(match[3])
                            };
                        }
                        elem = elem.parentElement;
                    }
                    return null;
                }

                let headers = document.getElementsByTagName('header');

                if (headers === null || headers.length === 0) {
                    return hs.wrong('Cannot find the header in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one header in the document.');
                }

                let hasBackgroundImage = getComputedStyle(headers[0]).background.includes('url');

                let headerBack = getRealColor(headers[0]);
                let noCustomHeaderColor = headerBack === null || headerBack.hex === 0xFFFFFF;
                if (noCustomHeaderColor && !hasBackgroundImage) {
                    return hs.wrong("Looks like header's background color is not set. " +
                        "It should be an image or some non-white color.")
                }

                let footers = document.getElementsByTagName('footer');

                if (footers === null || footers.length === 0) {
                    return hs.wrong('Cannot find the footer in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one footer in the document.');
                }

                hasBackgroundImage = getComputedStyle(footers[0]).background.includes('url');

                let footerBack = getRealColor(footers[0]);
                let noCustomFooterColor = footerBack === null || footerBack.hex === 0xFFFFFF;
                if (noCustomFooterColor && !hasBackgroundImage) {
                    return hs.wrong("Looks like footer's background color is not set. " +
                        "It should be an image or some non-white color.")
                }

                return hs.correct()
            },

            // Test #10 - check click button and show popup window
            () => {
                let buttons = document.getElementsByClassName('open-window');

                if (buttons === null || buttons.length === 0) {
                    return hs.wrong('Cannot find a button with the class "open-window" to open the pop-up window.');
                }

                let forms = document.getElementsByClassName('window');

                if (forms === null || forms.length === 0) {
                    return hs.wrong('Cannot find the element with the class "window".');
                }

                return hs.correct()
            },

            // Test #11 -  check that the page has a hamburger menu
            () => {
                let buttons = document.getElementsByClassName('hamburger');

                if (buttons === null || buttons.length === 0) {
                    return hs.wrong('Not find the hamburger menu on your page. Create it and set the "hamburger" class to the tag that wraps the menu elements.');
                }
                return hs.correct()
            }
        );

        await browser.close();
        return result;
    }


    jest.setTimeout(30000);
    test("Test stage", async () => {
            let result = await stageTest();
            if (result['type'] === 'wrong') {
                fail(result['message']);
            }
        }
    );
  learner_created: false
- name: src/index.js
  visible: true
  text: |-
    const openWindowButtons = document.querySelectorAll("[data-window-target]");
    const closeWindowButtons = document.querySelectorAll("[data-close-button]");
    const overlay = document.getElementById("overlay");

    openWindowButtons.forEach(button => {
        button.addEventListener("click", () => {
            const window = document.querySelector(button.dataset.windowTarget);
            openWindow(window);
        })
    })

    overlay.addEventListener("click", () => {
        const windows = document.querySelectorAll(".window.active");
        windows.forEach(window => {
            closeWindow(window);
        })

    })

    closeWindowButtons.forEach(button => {
        button.addEventListener("click", () => {
            const window = button.closest(".window");
            closeWindow(window);
        })
    })

    function openWindow(window) {
        if (window == null) return;
        window.classList.add("active");
        overlay.classList.add("active");
    }

    function closeWindow(window) {
        if (window == null) return;
        window.classList.remove("active");
        overlay.classList.remove("active");
    }
  learner_created: true
- name: src/style.css
  visible: true
  text: |-
    /*Reset to defaults for all browsers*/

    * {
        margin: 0;
        padding: 0;
        /*background-color: black;*/
        /*color: white;*/
    }

    /*======= Grid layout ===============================================*/

    /*.navigation { grid-area: navigation; }*/
    /*.header { grid-area: header; }*/
    /*.about { grid-area: about; }*/
    /*.portfolio { grid-area: portfolio; }*/
    /*.footer { grid-area: footer; }*/

    /*.container {*/
    /*    display: grid;*/
    /*    grid-template-areas:*/
    /*    "navigation navigation navigation navigation"*/
    /*    "header header header header"*/
    /*    "about about about about"*/
    /*    "portfolio portfolio portfolio portfolio"*/
    /*    "footer footer footer footer";*/
    /*    !*grid-gap: 10px;*!*/
    /*    background-color: #2196F3;*/
    /*    !*padding: 10px;*!*/
    /*}*/

    .container {
        display: flex;
        flex-direction: column;
        background-color: #2196F3;
    }

    /*===================================================================*/

    /*======= Top navigation bar =========================================*/

    .navigation ul {
        background-color: #333;
        list-style-type: none;
        overflow: hidden;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 1;
    }

    .navigation li {
        float: right;
    }

    .navigation a {
        display: block;
        text-align: center;
        padding: 14px 16px;
        text-decoration: none;
        color: mediumpurple;
    }

    .navigation a:hover {
        background-color: #111;
        color: white;
    }

    /*===================================================================*/

    /*======= Header section ============================================*/
    /*.header {*/
    /*    margin-top: 45px;*/
    /*}*/

    .header-background {
        position: relative;
        text-align: center;
        color: yellow;
    }

    .header-title {
        position: absolute;
        bottom: 20%;
        left: 10%;
    }

    /*===================================================================*/

    /*======= About section =============================================*/
    .about {
        background-color: lightgreen;
        text-align: center;
        /*margin-top: -5px;*/
    }

    .about p {
        text-align: left;
    }

    /*===================================================================*/

    /*======= Portfolio section =========================================*/
    .portfolio {
        background-color: mediumpurple;
        text-align: center;
    }

    .portfolio img {

    }

    /*===================================================================*/

    /*======= Footer section ============================================*/
    .footer {
        background-color: #2196F3;
        text-align: center;
    }

    /*@media (max-width: 500px) {*/
    /*    .grid-container {*/
    /*        grid-template-columns: 1fr;*/
    /*        grid-template-areas:*/
    /*      "header"*/
    /*      "main"*/
    /*      "sidebar"*/
    /*      "footer";*/
    /*    }*/
    /*}*/

    /*===================================================================*/

    .window {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0);
        transition: 200ms ease-in-out;
        border: 3px solid black;
        border-radius: 10px;
        z-index: 10;
        background-color: white;
        width: 500px;
        max-width: 80%;
    }

    .window.active {
        transform: translate(-50%, -50%) scale(1);
    }

    .window h3 {
        padding: 10px 15px;
        border-bottom: 1px solid black;
        font-size: 1.25rem;
    }

    .window p {
        padding: 10px 15px;
    }

    .close-window {
        cursor: pointer;
        font-size: 1.25rem;
        font-weight: bold;
        padding: 5px 5px;
        margin: 10px 0;
        border-radius: 5px;
    }

    #overlay {
        position: fixed;
        opacity: 0;
        transition: 200ms ease-in-out;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0, 0, 0, .5);
        pointer-events: none;
    }

    #overlay.active {
        opacity: 1;
        pointer-events: all;
    }
  learner_created: true
- name: src/images.css
  visible: true
  text: |
    /* Original dimensions: 1920x1080 */
    #header-bg {
        width: 100%;
        height: 100%;
        z-index: auto;
        /*margin-bottom: -5px;*/
    }

    /* Original dimensions: 1000x650 */
    #flashcards-img {
        width: 800px;
        height: 520px;
        border: 5px solid darkred;
    }

    /* Original dimensions: 627x349 */
    #piano-img {
        width: 627px;
        height: 349px;
    }

    .about img {
        width: 600px;
        height: 450px;
    }
  learner_created: true
- name: src/nav.css
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/137/stages/734/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Sun, 27 Dec 2020 22:59:27 UTC
record: -1
